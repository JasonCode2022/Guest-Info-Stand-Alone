{"version":3,"names":["guestDetailsCss","GuestDetails","handleCheckboxChange","event","checkbox","target","this","newsletter","checked","handleSubmit","preventDefault","formData","firstname","lastname","email","alternateemail","password","country","city","adress","countrycode","mobilenumber","formDataSubmitted","emit","console","log","saveGuestDetailsClick","showFormError","render","mainContent","opened","h","id","action","class","htmlFor","type","placeholder","value","onChange","disabled","selected","rows","onInput","name","onClick"],"sources":["src/components/guest-details/guest-details.css?tag=jji-guest-details","src/components/guest-details/guest-details.tsx"],"sourcesContent":[null,"import { Component, Prop, h, Event, EventEmitter, State } from \"@stencil/core\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n    tag: 'jji-guest-details',\r\n    styleUrl: './guest-details.css',\r\n})\r\nexport class GuestDetails {\r\n\r\n\r\n\r\n    //Controls the visibility of the sign-up form.\r\n    @Prop({ reflect: true, mutable: true }) opened: boolean;\r\n\r\n\r\n    @Event({ bubbles: true, composed: true }) formDataSubmitted: EventEmitter<any>;\r\n\r\n    @State() firstname: string = '';\r\n    @State() lastname: string = '';\r\n    @State() email: string = '';\r\n    @State() alternateemail: string = '';\r\n    @State() password: string = '';\r\n    @State() country: string = '';\r\n    @State() city: string = '';\r\n    @State() adress: string = '';\r\n    @State() countrycode: string = '';\r\n    @State() mobilenumber: string = '';\r\n    @State() newsletter: boolean = false;\r\n\r\n    //Indicates whether the form has been submitted.\r\n    @State() formSubmitted: boolean = false;\r\n\r\n    //New state variable to control the error message\r\n    @State() showFormError: boolean = false;\r\n\r\n\r\n    handleCheckboxChange(event: Event) {\r\n        const checkbox = event.target as HTMLInputElement;\r\n        this.newsletter = checkbox.checked;\r\n    }\r\n\r\n    async handleSubmit(event: Event) {\r\n        event.preventDefault();\r\n        const formData = {\r\n            firstname: this.firstname,\r\n            lastname: this.lastname,\r\n            email: this.email,\r\n            alternateemail: this.alternateemail,\r\n            password: this.password,\r\n            country: this.country,\r\n            city: this.city,\r\n            adress: this.adress,\r\n            countrycode: this.countrycode,\r\n            mobilenumber: this.mobilenumber,\r\n            newsletter: this.newsletter,\r\n        };\r\n        //Emit the form data through the custom event\r\n        this.formDataSubmitted.emit(formData);\r\n        console.log(formData);\r\n    }\r\n\r\n    saveGuestDetailsClick(event: MouseEvent) {\r\n        // Prevent the default form submission behavior\r\n        event.preventDefault();\r\n\r\n        // Check if any required fields are empty\r\n        if (this.firstname === '' || this.lastname === '' || this.email === '' || this.password === '' || this.country === '' || this.countrycode === '' || this.mobilenumber === '') {\r\n            // Show the error message when the \"Save\" button is clicked and required fields are empty\r\n            this.showFormError = true;\r\n            console.log('Error!')\r\n        } else {\r\n            // If all required fields are filled, perform form submission\r\n            this.handleSubmit(event);\r\n            console.log(event);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let mainContent = null;\r\n\r\n        if (this.opened) {\r\n            mainContent = [\r\n                <div id=\"main-container\">\r\n                    <h3>Guest Details</h3>\r\n                    <div id=\"form-container\">\r\n                        <div>\r\n                            <form action=\"\">\r\n                                <div>\r\n                                    <p id=\"rg-date\">Registration date : <span id=\"a\">27-jul-2023</span></p>\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"firstName\">First Name*</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"firstName\"\r\n                                        placeholder=\"\"\r\n                                        value={this.firstname}\r\n                                        onChange={(event) => this.firstname = (event.target as HTMLInputElement).value} />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"lastname\">Last Name*</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"lastName\"\r\n                                        placeholder=\"\"\r\n                                        value={this.lastname}\r\n                                        onChange={(event) => this.lastname = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"email\">Email*</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"\"\r\n                                        value={this.email}\r\n                                        onChange={(event) => this.email = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"email\">Alternate email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"Alt-email\"\r\n                                        placeholder=\"\"\r\n                                        value={this.alternateemail}\r\n                                        onChange={(event) => this.alternateemail = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"password\">Password*</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"\"\r\n                                        value={this.password}\r\n                                        onChange={(event) => this.password = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"country\">Country*</label>\r\n                                    <select\r\n                                        class=\"country-dropdown\"\r\n                                        id=\"country\"\r\n                                        onChange={(event) => this.country = (event.target as HTMLSelectElement).value}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>Select Your Country</option>\r\n                                        <option value=\"USA\">USA</option>\r\n                                        <option value=\"Canada\">Canada</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"city\">City</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"city\"\r\n                                        placeholder=\"\"\r\n                                        value={this.city}\r\n                                        onChange={(event) => this.city = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label id=\"address-lable\" htmlFor=\"address\">Address</label>\r\n                                    <textarea\r\n                                        class=\"\"\r\n                                        id=\"address-textarea\"\r\n                                        rows={2}\r\n                                        placeholder=\"\"\r\n                                        value={this.adress}\r\n                                        onInput={(event) => (this.adress = (event.target as HTMLTextAreaElement).value)}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <div class=\"input-container\">\r\n                                    <label htmlFor=\"countryCode\">Mobile</label>\r\n                                    <select\r\n                                        id=\"countryCode\"\r\n                                        onChange={(event) => (this.countrycode = (event.target as HTMLSelectElement).value)}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>Code</option>\r\n                                        <option value=\"+1\">+1 (USA)</option>\r\n                                        <option value=\"+44\">+44 (UK)</option>\r\n                                    </select>\r\n                                    <br />\r\n                                </div>\r\n                                <div class=\"\">\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        id=\"mobileNumber\"\r\n                                        placeholder=\"\"\r\n                                        value={this.mobilenumber}\r\n                                        onChange={(event) => this.mobilenumber = (event.target as HTMLInputElement).value}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"termsCheckbox\"\r\n                                        name=\"termsCheckbox\"\r\n                                        onChange={(event) => this.handleCheckboxChange(event)}\r\n                                    />\r\n                                    <label htmlFor=\"termsCheckbox\">Newsletter</label>\r\n                                </div>\r\n                                <div>\r\n                                    <span>Last used :</span>\r\n                                    <span>Language: <span id=\"b\">EN</span></span>\r\n                                    <span>--- Currency: <span id=\"c\">€</span></span>\r\n                                </div>\r\n\r\n                                <div class=\"line-separator\"></div>\r\n\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"full-width-button\"\r\n                                    onClick={(event) => this.saveGuestDetailsClick(event)}\r\n                                >\r\n                                    Save\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ]\r\n        }\r\n        return (\r\n            <div>\r\n                {mainContent}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"mappings":"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"}